# Devops

## Wizardlab

The Wizardlab is a labor of love. I started the  multi-machine vagrant
project as a way to practice the art of System Administration in a public
manner.

I use the Wizardlab as starting point when I decide to embark on a mission to
install/configure a new service or application.

- [wizardlab](Wizardlab.md)
- [github.com/ashemath/wizardlab](https://www.github.com/ashemath/wizardlab)

## Bill's take on Hypervisors

Hypervisors are one of my favorite tools. A hypervisor takes a computer and
divides up the resources for multiple virtual systems to use (VMs).

- [Hypervisors](/devops/Hypervisors.rst)

## Bill's Ansible Adventure

Ansible is the Python-driven cross-platform automation solution from Redhat.
The scripts for Ansible is done in yaml, and the tool imports variables from
files that it parses in the directory structure.

Ansible parses a host inventory file, and will dynamically assign
configuration based on properties of the host it targets. Groups of hosts
can be assigned and nested to create practically anything.

- [Wizardlab's Configuration Playbooks ](Playbooks.md)

## My DevOps Story

I fell in love with DevOps through the instructor training coursework that
I took during my tenure as an IT teacher. Before taking the instructor
training coursework for Cisco DevNet, I had been studying Cisco CCNA, Linux, and Python as separate topics. 

DevOps brought all of these concepts together, and the experience of
practicing all these skills at once was thrilling.

On my lab equipment, I was free to use whatever technology that I saw best fit
the job. I had a lot of desktop boxes, but most of they were from circa 2008,
and storage devices were mostly 200GB of spinning rust.

The nice production workstations had to run Windows, and I would have a device
get kicked out of the network if I configured any kind of firewall exception.
We had to join production systems to the production Active Directory, and I had
zero acccess to managing Domain Group policy. Everything had to be done by
hand, with a USB drive.

I needed to submit paperwork for every piece of software I installed, and wait
for a TAC technician to test the software (I waited up to a year for software
testing). Over 100 sites are supported by this single group of techs, so any
kind of question-mark raised during testing would often mean it would need to
sit for a while.

My students needed System Administration experience, so I designed a VDI
solution that I hosted on premises. I ran my own AD, so I could support VMware
and demonstrate datacenter concepts. All lab equipment was on an isolated
network with its own internet connection, and I routed traffic over the
internet to providde access to the Lab equipment from the production
workstations.

I created this whole VDI system before I systematically studied Linux, or
Networking. Building the whole system up was a process of brute force problem
solving. DevOps methodology and tooling makes building and maintaining systems
easier.

I realized that I would need to work in a larger scale environment to exercise
my new skillset, and I set my mind on finding a role as a System Administrator
instead of teaching. I spent six months training as a maniac, and it paid off.

In my current work, I am learning how to manage Windows workstations using
Linux, Ansible, Gitlab CI/CD, Powershell, and Chocolatey.

